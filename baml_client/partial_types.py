###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401,F821
# flake8: noqa: E501,F401,F821
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum
from pydantic import BaseModel, ConfigDict
from typing_extensions import TypeAlias
from typing import Dict, Generic, List, Optional, TypeVar, Union, Literal

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class Answer(BaseModel):
    cited_answer: Optional[str] = None
    references: List["Source"]

class Clarification(BaseModel):
    needed: Optional[bool] = None
    question: Optional[str] = None

class ContextItem(BaseModel):
    content: Optional[str] = None
    source: Optional[str] = None

class Critique(BaseModel):
    is_good: Optional[bool] = None
    missing_info: Optional[str] = None

class Plan(BaseModel):
    steps: List["Step"]

class RankedResultItem(BaseModel):
    content: Optional[str] = None
    link: Optional[str] = None
    relevance_score: Optional[int] = None

class ResultItem(BaseModel):
    content: Optional[str] = None
    link: Optional[str] = None

class Source(BaseModel):
    index: Optional[int] = None
    source: Optional[str] = None
    source_type: Optional[str] = None

class Step(BaseModel):
    tool: Optional[types.Tool] = None
    query: Optional[str] = None
